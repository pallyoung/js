{
  "name": "skyrtc",
  "version": "0.0.2",
  "description": "A server-side webRTC lib to build real-time communications in browser",
  "main": "SkyRTC.js",
  "author": {
    "name": "skyinlayer",
    "email": "lingyucoder@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "ws": ">= 0.0.0",
    "node-uuid": ">= 1.4.1",
    "express": "3.1.0"
  },
  "keywords": [
    "webrtc"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/LingyuCoder/SkyRTC.git"
  },
  "readmeFilename": "README.md",
  "homepage": "https://github.com/LingyuCoder/SkyRTC",
  "readme": "SkyRTC\n======\n##简介\n一个Node.js编写的WebRTC服务器端库，为服务器端库，需要配合客户端库[SkyRTC-client](https://github.com/LingyuCoder/SkyRTC-client)共同使用，用于搭建基于WebRTC和WebSocket技术的在线音频、视频聊天室\n\n##SkyRTC前端库SkyRTC-client\n[SkyRTC-client](https://github.com/LingyuCoder/SkyRTC-client)\n\n##简单示例\n###NPM安装\n执行如下命令从npm进行安装：\n```\n$ npm install skyrtc\n```\n###监听服务器\n```javascript\nvar express = require('express');\nvar app = express();\nvar server = require('http').createServer(app);\nvar SkyRTC = require('skyrtc').listen(server);\nvar port = process.env.PORT || 3000;\nserver.listen(port);\n```\n\n###监听WebRTC事件\nSkyRTC继承自EventEmitter, 可以通过如下语法监听事件：\n```javascript\nSkyRTC.rtc.on('eventName', function(params) {\n  //...\n});\n```\n\n##内置事件\n* new_connect\n* new_peer\n* remove_peer\n* socket_message\n* ice_candidate\n* offer\n* answer\n\n###new_connect\n新用户与服务器建立WebSocket连接时触发\n\n参数：\n* socket——新建立的WebSocket连接实例\n\n###new_peer\n用户加入房间后触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n* room——房间名称\n\n###remove_peer\n用户关闭连接后触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n\n###socket_message\n客户端向服务器端发送消息，且非自定义事件格式时触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n* msg——发送的消息内容\n\n###ice_candidate\n接收到ice candidate信令时触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n* candidate——ice candidate信令数据\n\n###offer\n接收到offer信令时触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n* offer——offer信令数据\n\n###answer\n接收到answer信令时触发\n\n参数：\n* socket——用户使用的WebSocket连接实例\n* answer——answer信令数据\n\n##接口\n* getRooms\n* broadcastInRoom\n* broadcast\n* getSocket\n* on\n\n###getRooms\n用户获取当前服务器上所有房间信息\n\n参数：\n无\n\n返回值：\n* rooms——所有房间名称的数组\n\n###getSocket\n通过socket的id获得socket实例\n\n参数：\n* id——socket的id\n\n返回值：\n* socket——WebSocket实例\n\n###broadcastInRoom\n在房间中广播消息\n\n参数：\n* room——被广播消息的房间名称\n* data——消息的具体内容\n* errorCb——广播失败时的回调函数\n\n返回值：\n无\n\n###broadcast\n向服务器上的所有用户广播消息\n\n参数：\n* data——消息的具体内容\n* errorCb——广播失败时的回调函数\n\n返回值：\n无\n\n###on\n向服务器上的事件绑定处理器\n\n参数：\n* eventName——被绑定的事件名称\n* callback——被绑定的事件触发时的回调函数\n\n返回值：\n无\n\n##自定义事件\n在SkyRTC中可以自定义事件，在前端页面使用WebSocket发送信息时，以如下JSON格式发送信息：\n```javascript\n{\n    \"eventName\": \"yourOwnEventName\",\n    \"data\": {\n        //自定义事件数据\n    }\n}\n```\n\n在后台通过监听同名事件来进行处理：\n```javascript\nSkyRTC.rtc.on(\"yourOwnEventName\", function(data){\n    //data将是前台所传输的数据\n});\n```\n\n自定义事件请不要与上述SkyRTC原生事件重名\n\n##项目完整实例\n[SkyRTC-demo](https://github.com/LingyuCoder/SkyRTC-demo)\n",
  "bugs": {
    "url": "https://github.com/LingyuCoder/SkyRTC/issues"
  },
  "_id": "skyrtc@0.0.2",
  "scripts": {},
  "_shasum": "bf5d23c036f26bb331cface6781d171b8f44f11e",
  "_from": "skyrtc@>= 0.0.0"
}
